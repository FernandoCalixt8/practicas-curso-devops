AWSTemplateFormatVersion: 2010-09-09

Description: Creacion de API Gateway, Lambdas y DynamoDB

Parameters:
  NombreProyecto:
    Description:  Nombre del proyecto
    Type:         String


Resources:
  ########################################
  ### Dynamo
  ########################################
  TablaProducto:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName:  ID
          AttributeType:  N
      BillingMode: PROVISIONED
      KeySchema:
        -
          AttributeName:  ID
          KeyType:        HASH
      ProvisionedThroughput:
        ReadCapacityUnits:  1
        WriteCapacityUnits: 1
      TableClass: STANDARD
      TableName:  !Ref NombreProyecto

  ########################################
  ### Lambdas
  ########################################
  InsertarProductoRolLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub insertar-${NombreProyecto}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect:   Allow
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/insertar-${NombreProyecto}:*
              -
                Action:
                  - dynamodb:PutItem
                Effect:   Allow
                Resource: !GetAtt TablaProducto.Arn
      Description:  Rol de Lambda que inserta productos
      RoleName:     !Sub insertar-${NombreProyecto}

  InsertarProducto:
    Type: AWS::Lambda::Function
    Properties:
      Code:         src/lambdas/insertar-producto/
      Description:  Lambda que inserta productos
      Environment:
        Variables:
          TABLA_PRODUCTO: !Ref TablaProducto
      FunctionName: !Sub insertar-${NombreProyecto}
      Handler:      index.handler
      MemorySize:   128
      Role:         !GetAtt InsertarProductoRolLambda.Arn
      Runtime:      nodejs20.x
      Timeout:      4

  ObtenerProductoRolLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub obtener-${NombreProyecto}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect:   Allow
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/obtener-${NombreProyecto}:*
              -
                Action:
                  - dynamodb:GetItem
                Effect:   Allow
                Resource: !GetAtt TablaProducto.Arn
      Description:  Rol de Lambda que obtiene productos
      RoleName:     !Sub obtener-${NombreProyecto}

  ObtenerProducto:
    Type: AWS::Lambda::Function
    Properties:
      Code:         src/lambdas/obtener-producto/
      Description:  Lambda que obtiene productos
      Environment:
        Variables:
          TABLA_PRODUCTO: !Ref TablaProducto
      FunctionName: !Sub obtener-${NombreProyecto}
      Handler:      index.handler
      MemorySize:   128
      Role:         !GetAtt ObtenerProductoRolLambda.Arn
      Runtime:      nodejs20.x
      Timeout:      4

  ########################################
  ### API Gateway
  ########################################
  ApiGatewayProducto:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description:  API Gateway de productos
      Name:         !Ref NombreProyecto
      ProtocolType: HTTP

  IntegracionPostProducto:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:                !Ref ApiGatewayProducto
      IntegrationType:      AWS_PROXY
      IntegrationUri:       !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InsertarProducto.Arn}/invocations
      IntegrationMethod:    POST
      PayloadFormatVersion: 2.0

  RutaPostProducto:
    DependsOn: IntegracionPostProducto
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:    !Ref ApiGatewayProducto
      RouteKey: POST /producto
      Target:   !Sub integrations/${IntegracionPostProducto}

  IntegracionGetProducto:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:                !Ref ApiGatewayProducto
      IntegrationType:      AWS_PROXY
      IntegrationUri:       !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ObtenerProducto.Arn}/invocations
      IntegrationMethod:    POST
      PayloadFormatVersion: 2.0

  RutaGetProducto:
    DependsOn: IntegracionGetProducto
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:    !Ref ApiGatewayProducto
      RouteKey: GET /producto/{id}
      Target:   !Sub integrations/${IntegracionGetProducto}

  StageProducto:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:        !Ref ApiGatewayProducto
      StageName:    dev
      AutoDeploy:   true

  ########################################
  ### Permisos Lambdas
  ########################################
  PermisosInsertarProducto:
    Type: AWS::Lambda::Permission
    Properties:
      Action:       lambda:InvokeFunction
      FunctionName: !GetAtt InsertarProducto.Arn
      Principal:    apigateway.amazonaws.com
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayProducto}/*/*/producto
  
  PermisosObtenerProducto:
    Type: AWS::Lambda::Permission
    Properties:
      Action:       lambda:InvokeFunction
      FunctionName: !GetAtt ObtenerProducto.Arn
      Principal:    apigateway.amazonaws.com
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayProducto}/*/*/producto/{id}